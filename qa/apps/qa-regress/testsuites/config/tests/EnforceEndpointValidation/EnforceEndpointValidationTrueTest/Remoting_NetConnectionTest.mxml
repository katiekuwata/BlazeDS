<?xml version="1.0"?>
<!--
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" width="1000" height="900" creationComplete="initTest()">
    <mx:Script>
        <![CDATA[
			import qa.utils.TestTaskEvent;
			import qa.utils.TestTask;
			import qa.mxunit.Assert;
			import qa.mxunit.MXUnitManager;
			import mx.controls.Alert;
            import flash.net.NetConnection;
			import flash.net.Responder; 
			import qa.CustomNetConnection;
			
			/**
			 * Error message expected by the test. 
			 */
			private var expected:String = "Destination 'qa.ssl.echoservice.Echo' not accessible over channel 'qa-amf-ac'."
			/**
			 *  Variable to hold singleton instance of the MXUnitManager.  
			 */
			private var manager:MXUnitManager;
			
			/**
			 *  TestTask object to listen for test task events. 
			 */ 
			private var t:TestTask = new TestTask();
			
            public function initTest():void 
			{
				//configure the MXUnitManager           
				manager = MXUnitManager.getInstance();                                                             
				//Call addTests giving it the object that contains all our test functions and an array of test names
				MXUnitManager.addTests(this,["testRemoteObject"], 5000); 
				
			}
			
			public function testTaskEventHandler(e:TestTaskEvent):void 
			{   						
				/*
				* If we are here because of a problem fail the test 
				* otherwise do nothing             
				*/
				if (e.type == TestTaskEvent.FAILED) {
					Assert.fail(e.message.faultString + ": " + e.message.faultDetail);     
				} else {
					//noop    
				}                                          
			}
			
			public function testRemoteObject():void 
			{
				manager.currentTest.chain(t,[TestTaskEvent.COMPLETED, TestTaskEvent.FAILED],testTaskEventHandler);
				var gateway:NetConnection = new CustomNetConnection();
				gateway.connect("http://localhost:8400/qa-regress/messagebroker/amfac");
				var resp:Responder = new Responder(show_results, on_fault);
				gateway.call("qa.ssl.echoservice.Echo.echoString", resp,"Hello");
				
				
			}
			public function show_results(o:Object):void 
			{
				Assert.fail("Shouldn't have been able to call the destination over the endpoint.");  
			}
			public function on_fault(o:Object):void 
			{
				Assert.assertEquals(expected,o.message); 
				t.taskCompleted();
			}
			public function AppendToGatewayUrl(value:String):void
			{
			
			}
        ]]>
    </mx:Script>
    <mx:Label text="RemoteObject NetConnection Test" fontSize="16"/>
    	
    <mx:TraceTarget level="0"/>
</mx:Application>