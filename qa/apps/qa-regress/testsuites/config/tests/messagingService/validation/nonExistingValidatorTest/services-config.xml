<?xml version="1.0" encoding="UTF-8"?>
<services-config>

    <services>
 
    </services>

    <security>
        <login-command class="flex.messaging.security.TomcatLoginCommand" server="Tomcat"/>
        <!-- Uncomment the correct app server
        <login-command class="flex.messaging.security.JRunLoginCommand" server="JRun"/>
        <login-command class="flex.messaging.security.WeblogicLoginCommand" server="Weblogic"/>
        <login-command class="flex.messaging.security.WebSphereLoginCommand" server="WebSphere"/>
        -->

        <!-- Security constraints that are used by samples in features/security-constraints/ -->
        <!-- Basic authentication -->
        <security-constraint id="sample-user-basic">
            <auth-method>Basic</auth-method>
            <!-- Roles are defined by the application server.
                In Tomcat, they are in conf/tomcat-users.xml
            -->
            <roles>
                <role>sampleusers</role>
            </roles>
        </security-constraint>
        <!-- Custom authentication -->
        <security-constraint id="sample-user-custom">
            <auth-method>Custom</auth-method>
            <roles>
                <role>sampleusers</role>
            </roles>
        </security-constraint>
    </security>

    <channels>

        <!-- AMF -->

        <!-- A regular AMF channel -->
        <channel-definition id="my-amf" class="mx.messaging.channels.AMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/amf" class="flex.messaging.endpoints.AMFEndpoint"/>
            <properties>
                <polling-enabled>false</polling-enabled>
            </properties>
        </channel-definition>

        <!-- A secure AMF channel -->
        <channel-definition id="my-secure-amf" class="mx.messaging.channels.SecureAMFChannel">
            <endpoint url="https://{server.name}:{server.port}/{context.root}/messagebroker/amfsecure" class="flex.messaging.endpoints.SecureAMFEndpoint"/>
            <properties>
                <!--HTTPS requests on some browsers do not work when pragma "no-cache" are set-->
                <add-no-cache-headers>false</add-no-cache-headers>
            </properties>
        </channel-definition>

        <!-- A piggybacking AMF channel -->
        <channel-definition id="my-amf-piggyback" class="mx.messaging.channels.AMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myamfpiggyback"
            class="flex.messaging.endpoints.AMFEndpoint"/>
            <properties>
                <polling-enabled>false</polling-enabled>
                <piggybacking-enabled>true</piggybacking-enabled>
            </properties>
        </channel-definition>

        <!-- A polling AMF channel -->
        <channel-definition id="my-amf-poll" class="mx.messaging.channels.AMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myamfpoll"
            class="flex.messaging.endpoints.AMFEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>3</polling-interval-seconds>
            </properties>
        </channel-definition>

        <!-- A long polling AMF channel -->
        <channel-definition id="my-amf-longpoll" class="mx.messaging.channels.AMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myamflongpoll"
            class="flex.messaging.endpoints.AMFEndpoint"/>
            <properties>
                <user-agent-settings>
                    <user-agent match-on="Firefox" max-streaming-connections-per-session="4"/>
                </user-agent-settings>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>0</polling-interval-seconds>
                <max-waiting-poll-requests>10</max-waiting-poll-requests>
                <wait-interval-millis>-1</wait-interval-millis>
                <client-wait-interval-millis>3000</client-wait-interval-millis>
            </properties>
        </channel-definition>
        <!-- A second long polling AMF channel -->
        <channel-definition id="my-amf-longpoll2" class="mx.messaging.channels.AMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myamflongpoll2"
            class="flex.messaging.endpoints.AMFEndpoint"/>
            <properties>
                <user-agent-settings>
                    <user-agent match-on="Firefox" max-streaming-connections-per-session="4"/>
                </user-agent-settings>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>0</polling-interval-seconds>
                <max-waiting-poll-requests>10</max-waiting-poll-requests>
                <wait-interval-millis>-1</wait-interval-millis>
                <client-wait-interval-millis>3000</client-wait-interval-millis>
            </properties>
        </channel-definition>
        <!-- A secure long polling AMF channel -->
        <channel-definition id="my-amf-secure-longpoll" class="mx.messaging.channels.SecureAMFChannel">
            <endpoint url="https://{server.name}:9400/{context.root}/messagebroker/mysecureamflongpoll"
            class="flex.messaging.endpoints.SecureAMFEndpoint"/>
            <properties>
                <user-agent-settings>
                    <user-agent match-on="Firefox" max-streaming-connections-per-session="4"/>
                </user-agent-settings>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>0</polling-interval-seconds>
                <max-waiting-poll-requests>10</max-waiting-poll-requests>
                <wait-interval-millis>-1</wait-interval-millis>
                <client-wait-interval-millis>3000</client-wait-interval-millis>
            </properties>
        </channel-definition>

        <!-- A streaming AMF channel with default options left in -->
        <channel-definition id="my-amf-stream" class="mx.messaging.channels.StreamingAMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myamfstream"
            class="flex.messaging.endpoints.StreamingAMFEndpoint"/>
            <properties>
                <idle-timeout-minutes>0</idle-timeout-minutes>
                <max-streaming-clients>10</max-streaming-clients>
                <server-to-client-heartbeat-millis>5000</server-to-client-heartbeat-millis>
                <user-agent-settings>
                    <user-agent match-on="MSIE" kickstart-bytes="2048" max-streaming-connections-per-session="1"/>
                    <user-agent match-on="Firefox" kickstart-bytes="0" max-streaming-connections-per-session="4"/>
                </user-agent-settings>
            </properties>
        </channel-definition>

        <channel-definition id="bad-amf-stream" class="mx.messaging.channels.StreamingAMFChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/badamfstream"
            class="flex.messaging.endpoints.StreamingAMFEndpoint"/>
            <properties>
                <idle-timeout-minutes>0</idle-timeout-minutes>
                <max-streaming-clients>10</max-streaming-clients>
                <server-to-client-heartbeat-millis>5000</server-to-client-heartbeat-millis>
                <user-agent-settings>
                    <user-agent match-on="MSIE" kickstart-bytes="2048" max-streaming-connections-per-session="0"/>
                    <user-agent match-on="Firefox" kickstart-bytes="0" max-streaming-connections-per-session="4"/>
                </user-agent-settings>
            </properties>
        </channel-definition>

        <!-- HTTP -->

        <!-- A regular HTTP channel -->
        <channel-definition id="my-http" class="mx.messaging.channels.HTTPChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/http" class="flex.messaging.endpoints.HTTPEndpoint"/>
            <properties>
                <polling-enabled>false</polling-enabled>
            </properties>
        </channel-definition>

        <!-- A secure HTTP channel -->
        <channel-definition id="my-secure-http" class="mx.messaging.channels.SecureHTTPChannel">
            <endpoint url="https://{server.name}:{server.port}/{context.root}/messagebroker/httpsecure" class="flex.messaging.endpoints.SecureHTTPEndpoint"/>
            <properties>
                <!--HTTPS requests on some browsers do not work when pragma "no-cache" are set-->
                <add-no-cache-headers>false</add-no-cache-headers>
            </properties>
        </channel-definition>

        <!-- A piggybacking HTTP channel -->
        <channel-definition id="my-http-piggyback" class="mx.messaging.channels.HTTPChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myhttppiggyback"
            class="flex.messaging.endpoints.HTTPEndpoint"/>
            <properties>
                <polling-enabled>false</polling-enabled>
                <piggybacking-enabled>true</piggybacking-enabled>
            </properties>
        </channel-definition>

        <!-- A polling HTTP channel -->
        <channel-definition id="my-http-poll" class="mx.messaging.channels.HTTPChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myhttppoll"
            class="flex.messaging.endpoints.HTTPEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>3</polling-interval-seconds>
            </properties>
        </channel-definition>

        <!-- A long polling HTTP channel -->
        <channel-definition id="my-http-longpoll" class="mx.messaging.channels.HTTPChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myhttplongpoll"
            class="flex.messaging.endpoints.HTTPEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>0</polling-interval-seconds>
                <max-waiting-poll-requests>10</max-waiting-poll-requests>
                <wait-interval-millis>-1</wait-interval-millis>
                <client-wait-interval-millis>3000</client-wait-interval-millis>
            </properties>
        </channel-definition>

        <!-- A streaming HTTP channel with default options left out -->
        <channel-definition id="my-http-stream" class="mx.messaging.channels.StreamingHTTPChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/myhttpstream"
            class="flex.messaging.endpoints.StreamingHTTPEndpoint"/>
        </channel-definition>


        <channel-definition id="bad-http-stream" class="mx.messaging.channels.StreamingHTTPChannel">
            <endpoint url="http://{server.name}:{server.port}/{context.root}/messagebroker/badhttpstream"
            class="flex.messaging.endpoints.StreamingHTTPEndpoint"/>
            <properties>
                <max-streaming-clients>10</max-streaming-clients>
                <server-to-client-heartbeat-millis>5000</server-to-client-heartbeat-millis>
                <user-agent-settings>
                    <user-agent match-on="MSIE" kickstart-bytes="2048" max-streaming-connections-per-session="0"/>
                    <user-agent match-on="Firefox" kickstart-bytes="0" max-streaming-connections-per-session="0"/>
                </user-agent-settings>
            </properties>
        </channel-definition>

        <!-- Clustering -->

        <!-- A polling AMF channel to be used in clustered destinations. This means
             all tokens (server.name, server.port, etc.) removed from endpoint url
        -->
        <channel-definition id="my-amf-poll-for-cluster" class="mx.messaging.channels.AMFChannel">
            <endpoint url="http://localhost:8400/team/messagebroker/myamfpollforcluster"
            class="flex.messaging.endpoints.AMFEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>3</polling-interval-seconds>
            </properties>
        </channel-definition>


        <!-- A polling HTTP channel to be used in clustered destinations. This means
             all tokens (server.name, server.port, etc.) removed from endpoint url
        -->
        <channel-definition id="my-http-poll-for-cluster" class="mx.messaging.channels.HTTPChannel">
            <endpoint url="http://localhost:8400/team/messagebroker/myhttppollforcluster"
            class="flex.messaging.endpoints.HTTPEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>3</polling-interval-seconds>
            </properties>
        </channel-definition>

        <!-- A secure polling AMF channel to be used in clustered destinations. This means
             all tokens (server.name, server.port, etc.) removed from endpoint url
        -->
        <channel-definition id="my-secure-amf-poll-for-cluster" class="mx.messaging.channels.SecureAMFChannel">
            <endpoint url="https://localhost:9400/team/messagebroker/mysecureamfpollforcluster"
            class="flex.messaging.endpoints.SecureAMFEndpoint"/>
            <properties>
                <!--HTTPS requests on some browsers do not work when pragma "no-cache" are set-->
                <add-no-cache-headers>false</add-no-cache-headers>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>3</polling-interval-seconds>
            </properties>
        </channel-definition>

        <!-- A secure polling HTTP channel to be used in clustered destinations. This means
             all tokens (server.name, server.port, etc.) removed from endpoint url
        -->
        <channel-definition id="my-secure-http-poll-for-cluster" class="mx.messaging.channels.SecureHTTPChannel">
            <endpoint url="https://localhost:9400/team/messagebroker/mysecurehttppollforcluster"
            class="flex.messaging.endpoints.SecureHTTPEndpoint"/>
            <properties>
                <!--HTTPS requests on some browsers do not work when pragma "no-cache" are set-->
                <add-no-cache-headers>false</add-no-cache-headers>
                <polling-enabled>true</polling-enabled>
                <polling-interval-seconds>3</polling-interval-seconds>
            </properties>
        </channel-definition>

    </channels>

    <logging>
        <target class="flex.messaging.log.ServletLogTarget" level="Debug">
		<!-- <target class="flex.messaging.log.ConsoleTarget" level="Debug"> -->
            <properties>
                <prefix>[BlazeDS] </prefix>
                <includeDate>true</includeDate>
                <includeTime>true</includeTime>
                <includeLevel>true</includeLevel>
                <includeCategory>true</includeCategory>
            </properties>
            <filters>
                <pattern>Endpoint.*</pattern>
                <pattern>Service.*</pattern>
				<!-- <pattern>Message.Filter</pattern> -->
                <pattern>Configuration</pattern>
            </filters>
        </target>
    </logging>

    <system>
        <redeploy>
            <enabled>true</enabled>
            <watch-interval>20</watch-interval>
            <watch-file>{context.root}/WEB-INF/flex/services-config.xml</watch-file>
            <watch-file>{context.root}/WEB-INF/flex/proxy-config.xml</watch-file>
            <watch-file>{context.root}/WEB-INF/flex/remoting-config.xml</watch-file>
            <watch-file>{context.root}/WEB-INF/flex/messaging-config.xml</watch-file>
            <touch-file>{context.root}/WEB-INF/web.xml</touch-file>
        </redeploy>
    </system>

    <clusters>
        <cluster id="default-cluster" properties="jgroups-tcp.xml" default="false" url-load-balancing="true"/>
        <cluster id="udp-cluster" properties="jgroups-udp.xml" default="false" url-load-balancing="true"/>
    </clusters>

    <!--
    <flex-client>
        <timeout-minutes>45</timeout-minutes>
    </flex-client>
    -->

    <!-- Message filters   -->
    <!-- <message-filters>
        <message-filter class="features.filters.KenTestFilter"/>
        <message-filter class="features.filters.SecondaryTestFilter"/>
		<message-filter class="features.validators.deserialization.TestDeserializationValidator"/>
    </message-filters> -->

 
    <!-- Deserialization validator, uncomment the one you want to use -->
    <validators>
        <!--  
        <validator class="features.validators.deserialization.TestDeserializationValidator"/>
		-->
        <validator class="features.validators.deserialization.KenTestDeserializationValidator"/>
        
        <!--
        <validator class="flex.messaging.validators.ClassDeserializationValidator">
            <properties>
                <disallow-classes>
                </disallow-classes>
                <allow-classes>
                    <class name="flex.*"/>
                </allow-classes>
             </properties>
        </validator>
        -->
    </validators>
</services-config>
