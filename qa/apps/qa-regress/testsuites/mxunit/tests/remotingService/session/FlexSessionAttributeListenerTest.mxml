<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="runTests()">
  <!--

 ADOBE CONFIDENTIAL
 ___________________

  Copyright 2008 Adobe Systems Incorporated
  All Rights Reserved.

 NOTICE:  All information contained herein is, and remains
 the property of Adobe Systems Incorporated and its suppliers,
 if any.  The intellectual and technical concepts contained
 herein are proprietary to Adobe Systems Incorporated and its
 suppliers and may be covered by U.S. and Foreign Patents,
 patents in process, and are protected by trade secret or copyright law.
 Dissemination of this information or reproduction of this material
 is strictly forbidden unless prior written permission is obtained
 from Adobe Systems Incorporated.
-->
    

    <mx:Script>
    <![CDATA[
        /*
         *    Test case to check FlexSessionAttributeListener
         */
    
        import mx.rpc.AsyncToken;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;
        import mx.rpc.remoting.RemoteObject;
        import qa.mxunit.*;

        private var rs:RemoteObject;
        
        private var manager:MXUnitManager = MXUnitManager.getInstance();
        
        public function runTests():void
        {
            rs = new RemoteObject("FlexSessionAttributeListenerTest");
            rs.addEventListener(ResultEvent.RESULT, handleResult);
            rs.addEventListener(FaultEvent.FAULT, handleFault);            
            manager.addTests(this, ["testStart"], 5000);   
        }
        
        public function testStart():void
        {
            var token:AsyncToken = rs.addListener();
            token.op = "addListener"; 
        }
        
        private function handleResult(event:ResultEvent):void
        {
            var op:String = "";
            if(event.token.op != null)
            {
                op = event.token.op;
                log("ResultEvent op=" + op);    
            }
               
            switch (op)
            {
                case "addListener":
                    var token1:AsyncToken = rs.setAttribute("name", "Tom");
                    token1.op = "setAttribute";
                    break;
                
                case "setAttribute":
                    var token2:AsyncToken = rs.setAttribute("name", "Jim");
                    token2.op = "replaceAttribute";
                    break;
                    
                case "replaceAttribute":
                    var token3:AsyncToken = rs.getAttributeNames();
                    token3.op = "getAttributeNames";
                    break;   
                
                case "getAttributeNames":
                    log("AttributeNames = " + event.result);
                    var token4:AsyncToken = rs.removeAttribute("name");
                    token4.op = "removeAttribute";
                    break;
                
                case "removeAttribute":
                    var token5:AsyncToken = rs.removeListener();
                    token5.op = "removeListener";
                    break;
                
                case "removeListener":       
                    Assert.pass();   
                    Assert.hasPendingTest = false;          
                    break;
            }            
        }
        
        private function handleFault(event:FaultEvent):void
        {   
            log("FaultEvent: op=" + event.token.op + " detail=" + event.fault.faultDetail + " string=" + event.fault.faultString);
            Assert.fail("there shouldn't be any fault " + event.fault.toString());
            Assert.hasPendingTest = false;    
        }
        
        private function log(s:String):void
        {
            ta.text += s + "\n";
        }
    ]]>
    </mx:Script>
    <mx:Button label="Reset" click="ta.text=''" />
    <mx:TextArea id="ta" width="70%" height="50%" />
</mx:Application>