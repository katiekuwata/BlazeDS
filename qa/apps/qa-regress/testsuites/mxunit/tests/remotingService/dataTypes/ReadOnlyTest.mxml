<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initApp()">
     <!--

	 ADOBE CONFIDENTIAL
	 ___________________

	  Copyright 2008 Adobe Systems Incorporated
	  All Rights Reserved.

	 NOTICE:  All information contained herein is, and remains
	 the property of Adobe Systems Incorporated and its suppliers,
	 if any.  The intellectual and technical concepts contained
	 herein are proprietary to Adobe Systems Incorporated and its
	 suppliers and may be covered by U.S. and Foreign Patents,
	 patents in process, and are protected by trade secret or copyright law.
	 Dissemination of this information or reproduction of this material
	 is strictly forbidden unless prior written permission is obtained
	 from Adobe Systems Incorporated.
	-->

    <mx:RemoteObject destination="qa.echoservice.Echo" id="ro" />
    <mx:Script>
        <![CDATA[
             import qa.mxunit.*;
             import mx.messaging.ChannelSet;
	        import mx.messaging.channels.*;
	        import mx.messaging.config.ServerConfig;
	        import mx.collections.*;
	        import mx.rpc.events.*;

             private var manager:MXUnitManager;
             private var amfChannel:ChannelSet;
             private var amfChannelac:ChannelSet;
             private function initApp():void
             {
                 amfChannel = new ChannelSet();
                 amfChannel.addChannel(ServerConfig.getChannel("qa-amf"));
                 manager = MXUnitManager.getInstance();
                 manager.detectTests(this, 20000);
             }
             public function testReadOnlyTrue():void
             {
                ro.channelSet = amfChannel;

                 manager.currentTest.tokenChain(ro.getBook(),
                       function (event:Object, toke:Object):void
                       {
                           if (event is FaultEvent)
                           {
                                Assert.fail(event.fault.faultString);
                           }
                           else
                           {
                                Assert.assertEquals("thisIsReadOnly", event.result.readonly);
                           }
                       }
                 );
             }
             
             // since the include-read-only setting is a global server setting (blz-427), we can't
             // set different value for different channel.  remove the read-only false situation
             /*
             public function testReadOnlyFalse():void
             {
                ro.channelSet = amfChannelac;

                 manager.currentTest.tokenChain(ro.getBook(),
                       function (event:Object, toke:Object):void
                       {
                           if (event is FaultEvent)
                           {
                                Assert.fail(event.fault.faultString);
                           }
                           else
                           {
                                Assert.assertEquals(null, event.result.readonly);
                           }
                       }
                 );
             }
            */
        ]]>
    </mx:Script>
</mx:Application>