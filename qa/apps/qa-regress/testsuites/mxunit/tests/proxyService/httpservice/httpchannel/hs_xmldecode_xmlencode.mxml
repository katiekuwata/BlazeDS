<?xml version="1.0" ?>
<!--
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
-->

<mx:Application 
		xmlns:mx="http://www.adobe.com/2006/mxml" 
		xmlns:qa="http://www.adobe.com/2006/flexqa"
		creationComplete="run()"
		>
	
	<!-- xmlDecode -->
    <mx:HTTPService 
		id="hsXMLDecode" 
		useProxy="true"
    	destination="basic.xml_http" 
        method = "GET"
        resultFormat = "object"
        xmlDecode="xmlDecode"
        result="onServiceResult_xmlDecode(event)" >
        
    </mx:HTTPService>
	
	<!-- xmlEncode -->
	<mx:HTTPService 
	 	id="hsXMLEncode" 
		useProxy="true"
		contentType="application/xml"
    	destination="echoXml_http"
        method = "POST"
        resultFormat = "text"
        xmlEncode="xmlEncode"
        result="onServiceResult_xmlEncode(event)" >
       
    </mx:HTTPService>
	
	
	
	
	<mx:Script>
	
	<![CDATA[
	     /****************************************************
        *  HttpService xml test
        * **************************************************/

        import qa.mxunit.*;
		import mx.rpc.events.*;
		import flash.xml.*;
		import mx.utils.*;

		public var resultXMLDecode : Object;
		public var resultXMLEncode : String;
		public var expected : String = new XMLDocument("<encoded>test</encoded>").toString();

		//xmldecode function called to decode returned xml
		public function xmlDecode(x : XMLNode) : Object
    	{
        	return {foo: 'bar'};
    	}

		//xmlencode function called to encode request parameters
	    public function xmlEncode(o:Object) : XMLNode
	    {
	        return new XMLDocument("<encoded>test</encoded>");
	    }
		
       public function onServiceResult_xmlDecode(event:ResultEvent):void {
             resultXMLDecode = event.result;
        }

		public function onServiceResult_xmlEncode(event:ResultEvent):void {
             resultXMLEncode = StringUtil.trim(String(event.result));
        }
  	
		public function run():void {

			// run hs
			hsXMLDecode.send();
			hsXMLEncode.send({foo:32, bar:'a string', baz: {a:1, b:32, c:'another string'}});
            

            MXUnitManager.delay = 6000;
			MXUnitManager.addTests(this,["Test_xmlDecode","Test_xmlEncode"],10000);
		}

		//test without proxy
        public function Test_xmlDecode():void {

			Assert.isTrue(resultXMLDecode.foo == "bar", "result.foo should be 'bar'");
		}

   		
   		public function Test_xmlEncode():void {

			Assert.isTrue(resultXMLEncode == expected, "result should be <encoded>test</encoded>");
		}



	]]>
	</mx:Script>
</mx:Application>