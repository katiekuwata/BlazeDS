<?xml version="1.0" ?>
<!--
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
-->

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:qa="http://www.adobe.com/2006/flexqa" layout="absolute"	
    creationComplete="run()">
		

    <mx:HTTPService id="myService" url="http://localhost:81/"  
        resultFormat = "object"
        result="onServiceResult_object(event)"
		fault="onServiceFault(event)"
		makeObjectsBindable="false"
		method="GET"/>
	<mx:TextArea id="output" text="" x="20" y="332" width="536" height="208" htmlText=""/>
	<mx:Script>
	<![CDATA[
	    /****************************************************
        *  HTTPService array parameter test(bug 203359)
        * **************************************************/
        
	    import mx.controls.Alert;
		import qa.mxunit.*;
		import mx.rpc.events.*;
		import mx.utils.*;
        
        private var actualSOAPRequest:Object;
		public var resultObject:Object;
		private var toppings:Array = new Array();


        public function onServiceFault(event:FaultEvent):void {
           		trace("service fault: " + event.fault.faultString);
           		output.text += "service fault: " + event.fault.faultString + "\n";
        }
		public function onServiceResult_object(event:ResultEvent):void {
		    output.text += "service result: \n";
            resultObject = event.result;
            output.htmlText += "service result: " + ObjectUtil.toString(resultObject) + "\n";
        }
		private function handleInvokeEvent(event:InvokeEvent):void{
			
			actualSOAPRequest = event.message.body["toppings"];
			output.htmlText += "Actual Request \n" + ObjectUtil.toString(actualSOAPRequest) + "\n";			
		}		  
 		public function run():void {
			toppings[0] = "onions";
			toppings[1] = "peppers";
			toppings[2] = "pinneapple";
			var urlVariables:Object = new Object();
			urlVariables["crust"] = "thin";
			urlVariables["toppings"] = toppings;
	        myService.addEventListener(InvokeEvent.INVOKE, handleInvokeEvent);
			myService.send(urlVariables);	
            MXUnitManager.delay = 6000;
			MXUnitManager.addTests(this,["Test_object"],10000);
			resultObject = toppings;
		}
	
		public function Test_object():void {
		    output.text += "service result: " + ObjectUtil.toString(resultObject) + "\n";
			Assert.isTrue(resultObject == actualSOAPRequest, "not an array");
		}
	]]>
	</mx:Script>
</mx:Application>