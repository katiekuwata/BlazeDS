<?xml version="1.0" ?>
<!--
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
-->

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:qa="http://www.adobe.com/2006/flexqa" creationComplete="run()">
	
	<mx:Script>
	<![CDATA[
	    
        /******************************************************************
        *  Simple remoteobject test that receives a server side exception
        * *****************************************************************/
        
		import qa.mxunit.*;
		import mx.rpc.events.*;
        import mx.messaging.messages.ErrorMessage;
        import mx.rpc.remoting.RemoteObject;
        
        public var myException:RemoteObject;
		public var myData : String = "Extra data.";
		public var actualData : String;
		
		public function run():void {
			myException = new RemoteObject();
			myException.destination = "qa.errorhandling";
			myException.addEventListener(FaultEvent.FAULT, onServiceFault);
			myException.addEventListener(ResultEvent.RESULT, onServiceResult);
			
			run_exception();

            MXUnitManager.delay = 6000;
            MXUnitManager.addTests(this,["Test_exception"],10000);
		}

		public function onServiceResult(event:ResultEvent):void {
			trace("this test should have resulted in a FAULT instead of RESULT");
		}
		
		public function onServiceFault(event:FaultEvent):void {
            actualData = ErrorMessage(event.message).extendedData.extraData;
		}

		public function run_exception():void {
        	var call : Object = myException.generateMessageExceptionWithExtendedData(myData);
		}		
	
        public function Test_exception():void {
			Assert.assertTrue("expect an exception along with the extra data", myData == actualData);
  		}
	]]>
	</mx:Script>
</mx:Application>