<?xml version="1.0"?>
<!--
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
-->
<mx:Application  width='800' height='800' xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="startRun()">

    <mx:Consumer id="con" destination ="topic_authentication" fault="handleConFault(event)" propertyChange="handleConChange(event)"/>
    
    <mx:Script>
    <![CDATA[
    	import mx.messaging.config.ServerConfig;
    	import mx.messaging.Channel;
    	import mx.messaging.ChannelSet;
        import mx.events.PropertyChangeEvent;
        import mx.rpc.events.*;
        import qa.mxunit.Assert;
        import qa.mxunit.MXUnitManager;
        import mx.messaging.messages.*;
        import mx.messaging.events.*;   
        
        private var cs:ChannelSet;
        private var ch:Channel;
        
        //--------------------------------------------------------------------------
        //
        // Setup
        // 
        //--------------------------------------------------------------------------       
        private function startRun():void {
        	cs = new ChannelSet(); 
            ch = ServerConfig.getChannel("qa-streaming-amf"); 
            cs.addChannel(ch);  
            con.channelSet = cs;            
            MXUnitManager.addTests(this,["testConsumerWithCredential"], 3000);                        
        }
        //--------------------------------------------------------------------------
        //
        // Test Methods 
        // 
        //-------------------------------------------------------------------------- 
        // testConsumerWithCredential
        /**
         * Test that a consumer that attempts to subscribe to a destintation with a security constraint
         * and supplies valid credentials can subscribe successfully. 
         */
        public function testConsumerWithCredential():void {                        
            con.setCredentials("sampleuser","samplepassword");            
            con.subscribe();
            Assert.hasPendingTest = true;
        }
        
        private function handleConFault(event:MessageFaultEvent):void{
           Assert.fail("There should be no fault for consumer after authentication");
           Assert.hasPendingTest = false;
        }
        
        private function handleConChange(event:PropertyChangeEvent):void{
            if (event.property == "subscribed") 
                Assert.assertTrue(true, event.newValue);
            Assert.hasPendingTest = false;
        }
      
    ]]>
    </mx:Script>

</mx:Application>