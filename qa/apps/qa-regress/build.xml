<?xml version="1.0"?>
<!--
/*************************************************************************
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 **************************************************************************/

-->
<project name="qa-regress.war/build.xml" default="main" basedir="../.."> <!-- flex/qa -->

    <property environment="env"/>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${env.ANT_HOME}/lib/ant-contrib-1.0b2.jar"/>
    <property name="qa.dir" value="${basedir}" />
    <property name="blazeds.dir" value="${qa.dir}/.."/>
	   
	<property file="${qa.dir}/local.properties"/>
    <property file="${qa.dir}/build.properties" />
	<property file="${blazeds.dir}/build.properties"/>

    <property name="blazeds.dir.frameworks.dir" value="${blazeds.dir}/frameworks"/>
    
    <property name="qa.war" value="${qa.dir}/apps/qa-regress"/>
    <property name="dist.dir" value="${blazeds.dir}/dist"/>
    <property name="src.dir" value="${qa.war}/WEB-INF/src"/>
    
    <property name="config.dir" value="${qa.war}/WEB-INF/flex"/>
    <property name="config.file" value="flex-config.xml"/>
    <property name="config.sourcedir" location="${qa.dir}/resources/config" />
    
    <property name="classes.dir" value="${qa.war}/WEB-INF/classes"/>
        
	<property name="nowarn" value="on" />	
	<property name="server" value="${build.number}"/>
	
	<property name="template.dir" value="client-side-detection-with-history"/>


    <path id="classpath">
        <fileset dir="${qa.war}/WEB-INF/lib" includes="**/*.jar"/>
        <fileset dir="${qa.war}/WEB-INF/flex/jars" includes="**/*.jar"/>
        <pathelement location="${jms.jar}"/>
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${xalan.jar}"/>
    </path>

    <path id="qa.classpath">
        <fileset dir="${qa.dir}/lib" includes="**/*.jar"/>
        <pathelement location="${qa.dir}/classes" />
    </path>

    <target name="main" depends="clean,compile,generate-config-files"/>  


    <target name="prepare" depends="compile-qasource">
        <mkdir dir="${qa.war}/WEB-INF/lib"/>
        <mkdir dir="${qa.war}/WEB-INF/classes"/>
        <delete file="${qa.war}/WEB-INF/flex/cache.dep" quiet="true"/>

    </target>

    <target name="compile-qasource" >
        <ant antfile="${qa.dir}/src/build.xml" inheritall="false">
            <property name="qa.dir" location="${qa.dir}" />
            <property name="sdk.dir" location="${sdk.dir}" />
            <property name="blazeds.dir" location="${blazeds.dir}" />
        </ant>
    </target>

    <target name="copy-resources">
    	
    	<!-- copy sdk version sepecific web.xml -->
    	<copy todir="${qa.war}/WEB-INF">
    		<fileset dir="${qa.dir}/resources/webtier/flex_sdk_${sdk.version}/">
    			<include name="web.xml"/>
    		</fileset>
    	</copy>
    	
        <!-- copy to the WEB-INF/flex directory -->
        <copy todir="${qa.war}/WEB-INF/flex">
            <fileset dir="${blazeds.dir.frameworks.dir}">
            	<include name="mxml-manifest.xml"/>
                <include name="flash-unicode-table.xml"/>
            	<include name="flex-sdk-description.xml"/>
                <include name="*.ser"/>
                <include name="locale/en_US/*.swc"/>                
            </fileset>
        </copy>

        <!-- copy swcs to the WEB-INF/flex/libs directory -->
        <copy todir="${qa.war}/WEB-INF/flex/libs">
            <fileset dir="${blazeds.dir.frameworks.dir}/libs" includes="**/*.swc"/>
        </copy>
        
        <!-- copy template file to the history directory -->
        <copy todir="${qa.war}/history" flatten="true">
            <fileset dir="${blazeds.dir}/templates/${template.dir}" includes="**/*.js,**/*.css,**/historyFrame.html"/>
        </copy>

		<!-- copy qa swcs to the WEB-INF/flex/libs directory -->
        <copy todir="${qa.war}/WEB-INF/flex/libs">
            <fileset dir="${qa.dir}/frameworks/libs" includes="${qa.libs}"/>
        </copy>


        <!-- copy to the lib directory -->
        <copy todir="${qa.war}/WEB-INF/lib">
            <fileset dir="${blazeds.dir}/lib" includes="${webapp.lib},${webtier.lib},jgroups.jar" />
            <fileset dir="${qa.dir}/lib" includes="${axis.jars},${qa-services.jars}"/>
        </copy>
    	
        <!-- copy to the webtier bootstrap jars directory -->
        <copy todir="${qa.war}/WEB-INF/flex/jars">
            <fileset dir="${blazeds.dir}/lib" includes="${webtier.jars}" />
        </copy>

        <!-- copy to the classes directory -->
        <copy todir="${qa.war}/WEB-INF/classes">
            <fileset dir="${qa.war}/WEB-INF/src">
                <include name="**/*.xml"/>
            </fileset>
            <fileset dir="${blazeds.dir}/lib" includes="${webapp.classes}" />
        </copy>
        
        <!-- copy httpunit and xalan jars which are used by mxunit to the qa.dir/lib directory -->
        <copy todir="${qa.dir}/lib">
            <fileset dir="${blazeds.dir}/lib" includes="${httpclient.jars}"/>
            <fileset dir="${blazeds.dir}/lib" includes="xalan.jar"/>
        </copy>    
    	
    	<!-- create version.properties -->
    	<propertyfile file="${qa.war}/WEB-INF/flex/version.properties">
    	    <entry key="build" value="${manifest.Implementation-Version}.${build.number}"/>
    	   	<entry key="minimumSDKVersion" value="${min.sdk.version}"/>
    	</propertyfile>
    </target>

    <target name="copy.automation.resources" description="Copy QA Resources..." >
        <!-- delete old folders -->
        <delete>
        	<fileset dir="${qa.war}">
        		<include name="features/*"/>        		
        		<include name="lib/*"/>        		
        	</fileset>
        </delete>
    	<delete dir="${qa.war}/WEB-INF/flex/qa_classes"/>
    	
        <!-- copy frameworks  -->
        <copy todir="${qa.war}">
        	<fileset dir="${qa.dir}">
        		<include name="features/*"/>        		
        		<include name="lib/*"/>
        		<exclude name="lib/tools/"/>
        	</fileset>        	      	
        </copy>
  	</target>


    <target name="run-depend" if="src.depend">
        <echo message="Removing class files that changed and dependent class files."/>
        <depend cache="${classes.dir}" srcdir="${src.dir}" destdir="${classes.dir}"/>
    </target>


    <target name="compile" depends="prepare,run-depend,copy-resources" description="compile">
    
        <echo message="${xalan.jar}"/>
        <echo message="compiling sources with 1.5 "/>
        <javac source="1.5" deprecation="off" debug="true" nowarn="${nowarn}" destdir="${classes.dir}" srcdir="${src.dir}" classpathref="classpath" />

    	<copy todir="${classes.dir}">
			<fileset dir="${src.dir}" includes="**/*.xml,**/*.p4,**/*.jpg" />
		</copy>
    </target>

    <target name="generate-config-files" description="--> Merge local .mod.xml files with original config files.  Override 'config.sourcedir' to specify a different source location for the original config files." >

        <taskdef name="MergeXML" classname="tools.ant.MergeXML">
            <classpath refid="qa.classpath"/>
        </taskdef>

        <delete dir="${config.dir}/mergeGenerated" quiet="true"/>

        <mkdir dir="${config.dir}/mergeGenerated" />
        

        <!-- Merge mods and local overrides into flex-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/flex-config.xml"
            importFile="${config.dir}/flex-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/flex-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/flex-config.aftermods.xml"
            importFile="${config.dir}/flex-config.mods.local.xml"
            destinationFile="${config.dir}/flex-config.xml"/>

        <!-- Merge mods and local overrides into air-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/air-config.xml"
            importFile="${config.dir}/flex-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/air-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/air-config.aftermods.xml"
            importFile="${config.dir}/flex-config.mods.local.xml"
            destinationFile="${config.dir}/air-config.xml"/>

        <!-- Merge mods and local overrides into flex-webtier-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/flex-webtier-config.xml"
            importFile="${config.dir}/flex-webtier-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/flex-webtier-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/flex-webtier-config.aftermods.xml"
            importFile="${config.dir}/flex-webtier-config.mods.local.xml"
            destinationFile="${config.dir}/flex-webtier-config.xml"/>


        <!-- Merge mods and local overrides into services-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/services-config.xml"
            importFile="${config.dir}/services-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/services-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/services-config.aftermods.xml"
            importFile="${config.dir}/services-config.mods.local.xml"
            destinationFile="${config.dir}/services-config.xml"/>


        <!-- Merge mods and local overrides into proxy-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/proxy-config.xml"
            importFile="${config.dir}/proxy-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/proxy-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/proxy-config.aftermods.xml"
            importFile="${config.dir}/proxy-config.mods.local.xml"
            destinationFile="${config.dir}/proxy-config.xml"/>


        <!-- Merge mods and local overrides into remoting-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/remoting-config.xml"
            importFile="${config.dir}/remoting-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/remoting-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/remoting-config.aftermods.xml"
            importFile="${config.dir}/remoting-config.mods.local.xml"
            destinationFile="${config.dir}/remoting-config.xml"/>


        <!-- Merge mods and local overrides into messaging-config.xml -->
        <MergeXML baseFile="${config.sourcedir}/messaging-config.xml"
            importFile="${config.dir}/messaging-config.mods.xml"
            destinationFile="${config.dir}/mergeGenerated/messaging-config.aftermods.xml"/>

        <MergeXML baseFile="${config.dir}/mergeGenerated/messaging-config.aftermods.xml"
            importFile="${config.dir}/messaging-config.mods.local.xml"
            destinationFile="${config.dir}/messaging-config.xml"/>

        <delete dir="${config.dir}/mergeGenerated" quiet="true"/>
    </target>


    <target name="generate-deployable-config-files" depends="generate-config-files"
            description="--> Remove relative paths from config files.  Override 'config.sourcedir' to specify a different source location for the original config files." >
        <property name="config.sourcedir" location="${qa.dir}/resources/config" />

        <taskdef name="MergeXML" classname="tools.ant.MergeXML">
            <classpath refid="qa.classpath"/>
        </taskdef>

        <mkdir dir="${config.dir}/previousConfigs" />

        <move file="${config.dir}/flex-config.xml" toDir="${config.dir}/previousConfigs" overwrite="true" failonerror="false"/>

        <!-- Remove relative paths from flex-config.xml -->
        <MergeXML baseFile="${config.dir}/previousConfigs/flex-config.xml"
            importFile="${config.dir}/flex-config.mods.deployable.xml"
            destinationFile="${config.dir}/flex-config.xml"/>
    	
    	<delete dir="${config.dir}/previousConfigs" quiet="true"/>
        
    	<!--create a copy of web.xml to be used by tomcat -->
    	<copy file="${qa.war}/WEB-INF/web.xml" tofile="${qa.war}/WEB-INF/web.xml.tomcat" overwrite="true"/>
    	
    	<!-- Remove activemq references in web.xml -->
    	<copy file="${qa.war}/WEB-INF/web.xml" tofile="${qa.war}/WEB-INF/web.xml.deployable" overwrite="true"/>
    	
    	<replace file="${qa.war}/WEB-INF/web.xml.deployable" value=" ">
    	  <replacetoken><![CDATA[<context-param>
        <param-name>brokerURI</param-name>
        <param-value>/WEB-INF/activemq.xml</param-value>
    </context-param>]]></replacetoken>
    		
       	</replace>
		
    	<replace file="${qa.war}/WEB-INF/web.xml.deployable" value=" ">    	  
    		
      	  <replacetoken><![CDATA[<!-- Active MQ Spring Context Listener-->
    <listener>
        <listener-class>org.apache.activemq.web.SpringBrokerContextListener</listener-class>
    </listener>]]></replacetoken>
    	</replace>
        
    </target>

	<target name="package-qa-sdk" description="used for precompilation by deployed wars">	
		<copy file="${qa.dir}/lib/browserServer.jar" tofile="${blazeds.dir}/lib/browserServer.jar" overwrite="true"/>	
		<!-- create sdk zip for qa -->
		<zip destfile="${dist.dir}/qa-regress-sdk.zip">
			<fileset dir="${blazeds.dir}">
				<include name="ant/**/*"/>
				
				<include name="bin/**/*"/>
				<exclude name="bin/mac/*"/>
				<exclude name="bin/win/FlashPlayer.exe"/>
				
				<include name="frameworks/**/*"/>
				<exclude name="frameworks/flash-integration/**/*"/>
				<exclude name="frameworks/javascript/**/*"/>
				<exclude name="frameworks/libs/air/*"/>
				<exclude name="frameworks/libs/player/*"/>
				<exclude name="frameworks/local-swcs/*"/>
				
				<include name="lib/*.jar"/>						
				<exclude name="lib/flex*.jar"/>				
				<exclude name="lib/jgroups*.*"/>
			</fileset>			
		</zip>	
		
		<!--add flex-messaging-common.jar to the sdk zip -->
		<zip 
			destfile="${dist.dir}/qa-regress-sdk.zip"
			basedir="${blazeds.dir}"
			includes="lib/flex-messaging-common.jar"
			update="true"
			/>
		
	</target>
	
	
	<target name="package" depends="copy.automation.resources,generate-deployable-config-files,package-qa-sdk" description=" Creates distribution war file">

        <war file="${dist.dir}/qa-regress.war"
            webxml="${qa.war}/WEB-INF/web.xml.deployable">
            <manifest>
                <attribute name="Sealed" value="${manifest.sealed}"/>
                <attribute name="Implementation-Title" value="${manifest.Implementation-Title} - QA Regressions Application"/>
                <attribute name="Implementation-Version" value="${manifest.Implementation-Version}.${label}"/>
                <attribute name="Implementation-Vendor" value="${manifest.Implementation-Vendor}"/>
            </manifest>
            <fileset dir="${qa.war}" excludes="WEB-INF/flex/*.mods.*,WEB-INF/src/**/*.java,build.xml,WEB-INF/jsp/**/*,WEB-INF/sessions/**/*,WEB-INF/web.xml"/>
        </war>
    	
    </target>


    <target name="clean" description="--> Removes jars and classes">
        <delete quiet="true">
            <fileset dir="${qa.war}/WEB-INF/lib" includes="**/*"/>
        </delete>
        <delete quiet="true">
            <fileset dir="${qa.war}/WEB-INF/flex/jars" includes="**/*"/>
        </delete>
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${qa.war}/WEB-INF/flex/locale" includes="**/*"/>
        </delete>
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${qa.war}/WEB-INF/flex/libs" includes="**/*"/>
        </delete>
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${qa.war}/WEB-INF/flex" includes="cache.dep,*.ser,mxml-manifest.xml"/>
        </delete>
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${qa.war}/history" includes="**/*"/>
        </delete>
        <!-- generated config files -->
        <delete quiet="true" >
            <fileset dir="${qa.war}/WEB-INF/flex" includes="services-config.xml,proxy-config.xml,remoting-config.xml,messaging-config.xml,flex-config.xml,flex-webtier-config.xml,services-config.orig.xml"/>
            <fileset dir="${qa.war}/WEB-INF" includes="web.xml.deployable,web.xml"/>
        </delete>
        <delete quiet="true">
            <fileset dir="${classes.dir}" includes="**/*.class"/>
        </delete>
        <delete quiet="true" file="${dist.dir}/qa-regress.war"/>
    	<delete quiet="true" file="${dist.dir}/qa-regress-sdk.zip"/>    
    	<delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${qa.dir}/lib" includes="${httpclient.jars}"/>
            <fileset dir="${qa.dir}/lib" includes="${xalan.jar}"/>
        </delete>
    </target>

    <target name="generated-clean">
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${qa.war}" includes="**/generated/*" />
        </delete>
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${qa.war}" includes="**/generated" />
        </delete>
    </target>
</project>
