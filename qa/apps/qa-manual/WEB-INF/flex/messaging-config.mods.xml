<flex-message-service-mods>
    <!--
     The contents of this file will be used to modify an existing messaging-config.xml file so
     there is no need to maintain an entire config file.

     Each child directly under the root has two extra attributes - parent and action.

        parent - REQUIRED.  slash delimited path as to the parent node for the change
        action - replace, add, delete.  Default is replace.

    Local overrides are encouraged to be in messaging-config.mods.local.xml

    THE BASE PARENT FOR flex-message-service is "service".
    -->
   <destination id="secured_message_amf" parent="service">
        <channels>
            <channel ref="data-amf"/>
        </channels>

    </destination>
    
    <destination id="MyTopicClustered" parent="service">
        <properties>
            <network>
                <!-- idle time in minutes before a subscriber will be unsubscribed -->
                <!-- '0' means don't force subscribers to unsubscribe automatically -->
                <session-timeout>0</session-timeout>
                <!-- Uncomment the following cluster reference for cluster-specific testing -->
                <!-- <cluster ref="default-tcp-cluster"/> -->
            </network>
            <server>
                <!-- ttl of 0 means live forever -->
                <message-time-to-live>0</message-time-to-live>

                <!-- options to make this a durable destination -->
                <durable>false</durable>
            </server>

        </properties>

        <channels>
            <channel ref="data-amf-polling-cluster"></channel>
            <channel ref="data-http-polling-cluster"></channel>
        </channels>
    </destination>


    <destination id="MyTopic" parent="service">
        <properties>
            <network>
                <!-- idle time in minutes before a subscriber will be unsubscribed -->
                <!-- '0' means don't force subscribers to unsubscribe automatically -->
                <session-timeout>0</session-timeout>
            </network>
            <server>
                <!-- ttl of 0 means live forever -->
                <message-time-to-live>0</message-time-to-live>

                <!-- options to make this a durable destination -->
                <durable>false</durable>
            </server>

        </properties>

        <channels>           
            <channel ref="data-polling-amf"/>
            <channel ref="qa-streaming-amf"/>
            <channel ref="qa-streaming-http"/>
            <channel ref="data-http-polling"/>
            <channel ref="data-amf-waiting-poll-requests"/>
            <channel ref="data-amf-long-poll"/>
            <channel ref="data-secure-amf-polling"/> 
            <channel ref="data-longpoll-amf"/>          
        </channels>

    </destination>


    <destination id="MyTransientTopic" parent="service">

        <properties>

            <network>
                <session-timeout>0</session-timeout>
            </network>

            <server>
                <!-- ttl of 0 means live forever -->
                <message-time-to-live>0</message-time-to-live>

                <!-- options to make this a durable destination -->
                <durable>false</durable>
            </server>

        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>

    </destination>
    
    
    <destination id="MyJMSTopic" parent="service">
    
        <properties>
         <network>
                <!-- idle time in minutes before a subscriber will be unsubscribed -->
                <!-- '0' means don't force subscribers to unsubscribe automatically -->
                <session-timeout>0</session-timeout>
            </network>
            <server>
                <durable>false</durable>
            </server>

            <jms>
                <!-- whether the adapter is performing topic (pub/sub) or queue (point-to-point) messaging -->
                <!-- optional element, defaults to Topic -->
                <destination-type>Topic</destination-type>

                <!-- the javax.jms.Message type which the adapter should use for this destination -->
                <message-type>javax.jms.TextMessage</message-type>

                <!-- name of the JMS connection factory in JNDI -->
                <connection-factory>jms/flex/TopicConnectionFactory</connection-factory>

                <!-- name of the destination in JNDI -->
                <destination-jndi-name>jms/topic/flex/simpletopic</destination-jndi-name>

                <!-- the JMS DeliveryMode for producers -->
                <delivery-mode>NON_PERSISTENT</delivery-mode>

                <!-- JMS priority for messages sent by Flash producers -->
                <message-priority>DEFAULT_PRIORITY</message-priority>

                <!-- the JMS message acknowledgement mode -->
                <acknowledge-mode>AUTO_ACKNOWLEDGE</acknowledge-mode>

                <!-- the JMS session transaction mode -->
                <transacted-sessions>false</transacted-sessions>

            </jms>
        </properties>

        <channels>            
            <channel ref="data-polling-amf"/>
        </channels>

        <adapter ref="jms" />

    </destination>
    
    <destination id="MyJMSObjectTopic" parent="service">

        <properties>
            <server>
                <durable>false</durable>
            </server>

            <jms>
                <!-- whether the adapter is performing topic (pub/sub) or queue (point-to-point) messaging -->
                <!-- optional element, defaults to Topic -->
                <destination-type>Topic</destination-type>

                <!-- the javax.jms.Message type which the adapter should use for this destination -->
                <message-type>javax.jms.ObjectMessage</message-type>

                <!-- name of the JMS connection factory in JNDI -->
                <connection-factory>java:comp/env/jms/flex/TopicConnectionFactory</connection-factory>

                <!-- name of the destination in JNDI -->
                <destination-jndi-name>java:comp/env/jms/topic/flex/simpletopic</destination-jndi-name>

                <!-- the JMS DeliveryMode for producers -->
                <delivery-mode>NON_PERSISTENT</delivery-mode>

                <!-- JMS priority for messages sent by Flash producers -->
                <message-priority>DEFAULT_PRIORITY</message-priority>

                <!-- the JMS message acknowledgement mode -->
                <acknowledge-mode>AUTO_ACKNOWLEDGE</acknowledge-mode>

                <!-- the JMS session transaction mode -->
                <transacted-sessions>false</transacted-sessions>

            </jms>

        </properties>

        <channels>            
            <channel ref="data-polling-amf"/>
        </channels>

        <adapter ref="jms" />

    </destination>
    
    <destination id="MyJMSQueue" parent="service">

        <properties>
            <server>
                <durable>false</durable>
            </server>

            <jms>
                <!-- whether the adapter is performing topic (pub/sub) or queue (point-to-point) messaging -->
                <!-- optional element, defaults to Topic -->
                <destination-type>Queue</destination-type>

                <!-- the javax.jms.Message type which the adapter should use for this destination -->
                <message-type>javax.jms.TextMessage</message-type>

                <!-- name of the JMS connection factory in JNDI -->
                <connection-factory>java:comp/env/jms/flex/QueueConnectionFactory</connection-factory>

                <!-- name of the destination in JNDI -->
                <destination-jndi-name>java:comp/env/jms/queue/flex/simplequeue</destination-jndi-name>

                <!-- the JMS DeliveryMode for producers -->
                <delivery-mode>NON_PERSISTENT</delivery-mode>

                <!-- JMS priority for messages sent by Flash producers -->
                <message-priority>DEFAULT_PRIORITY</message-priority>

                <!-- the JMS message acknowledgement mode -->
                <acknowledge-mode>AUTO_ACKNOWLEDGE</acknowledge-mode>

                <!-- the JMS session transaction mode -->
                <transacted-sessions>false</transacted-sessions>

            </jms>
        </properties>

        <channels>          
            <channel ref="data-polling-amf"/>
        </channels>

        <adapter ref="jms" />

    </destination>

    

    <!-- START DYNAMIC DESTINATION DESTINATIONS -->

    <!-- non-dynamic destination v1 -->
    <destination id="NonDynamicDestinationAMF" adapter="actionscript" parent="service">
        <properties>
            <server>
                <!-- <allow-subtopics>false</allow-subtopics> -->
                <!-- <subtopic-separator>.</subtopic-separator> -->
            </server>
        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>

    <!-- non-dynamic destination v2 -->
    <destination id="NonDynamicDestinationAllowSubtopicsFalseAMF" adapter="actionscript" parent="service">
        <properties>
            <server>
                <allow-subtopics>false</allow-subtopics>
                <!-- <subtopic-separator>.</subtopic-separator> -->
            </server>
        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>


    <!-- dynamic destination -->
    <destination id="DynamicDestinationAMF" adapter="actionscript" parent="service">
        <properties>
            <server>
                <allow-subtopics>true</allow-subtopics>
                <!-- <subtopic-separator>:</subtopic-separator>-->
            </server>
        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>


    <!-- another dynamic destination -->
    <destination id="DynamicDestinationDefaultSeparatorAMF" adapter="actionscript" parent="service">
        <properties>
            <server>
                <allow-subtopics>true</allow-subtopics>
                <!-- <subtopic-separator>.</subtopic-separator> -->
            </server>
        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>



    <!-- dynamic destination different separator -->
    <destination id="DynamicDestinationColonSeparatorAMF" adapter="actionscript" parent="service">
        <properties>
            <server>
                <allow-subtopics>true</allow-subtopics>
                <subtopic-separator>:</subtopic-separator>
            </server>
        </properties>
    
        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>
    
    <destination id="FLookDestination" adapter="actionscript" parent="service">
        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>

    <destination id="FLookDestinationWithSubtopics" adapter="actionscript" parent="service">
        <properties>
            <server>
                <allow-subtopics>true</allow-subtopics>
                <subtopic-separator>.</subtopic-separator>
            </server>
        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>



    <!-- secured dynamic destination 
    <destination id="SecuredDynamicDestinationSlashSeparatorAMF" adapter="secured-actionscript" parent="service">
        <properties>
            <server>
                <allow-subtopics>true</allow-subtopics>
                <subtopic-separator>/</subtopic-separator>
            </server>
        </properties>

        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>
    -->
    <!-- END DYNAMIC DESTINATION DESTINATIONS -->
    
    <!-- 
        Destinations for Real-time Push over HTTP:
        - amf destinations defined here test long polling and waiting poll requests on server.
        - http equivalents are created in bootstrap class runtimeconfig.components.RuntimeRTPushOverHttpDestinations
    -->
    <destination id="AMFLongPollDestination" parent="service">    
        <properties>
            <network>
                <session-timeout>0</session-timeout>
            </network>
            <server>
                <message-time-to-live>0</message-time-to-live>  
                <durable>false</durable>    
            </server>
        </properties>    
        <channels>
            <channel ref="data-amf-long-poll"/>
        </channels>    
    </destination>

    <destination id="AMFWaitingPollRequestDestination" parent="service">    
        <properties>
            <network>
                <session-timeout>0</session-timeout>
            </network>
            <server>
                <message-time-to-live>0</message-time-to-live>  
                <durable>false</durable>    
            </server>
        </properties>    
        <channels>
            <channel ref="data-amf-waiting-poll-requests"/>
        </channels>    
    </destination>
    
    <destination id="AMFPollSecureDestination" parent="service">    
        <properties>
            <network>
                <session-timeout>0</session-timeout>
            </network>
            <server>
                <message-time-to-live>0</message-time-to-live>  
                <durable>false</durable>    
            </server>
        </properties>    
        <channels>
            <channel ref="data-secure-amf-polling"/>
        </channels>    
    </destination>
    <!-- END destinations for Real-time Push over HTTP -->
    
    <destination id="rtmpMsg" parent="service">
        <properties>
            <network>
                <session-timeout>0</session-timeout>
            </network>
            <server>
                <message-time-to-live>0</message-time-to-live>
                <durable>false</durable>
                <allow-subtopics>true</allow-subtopics>
                <subtopic-separator>.</subtopic-separator>                
            </server>
        </properties>

        <channels>
            <channel ref="qa-streaming-amf"/>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>
    <destination id="MyPollingTopic1" parent="service">
        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>
    <destination id="MyPollingTopic2" parent="service">
        <channels>
            <channel ref="data-polling-amf"/>
        </channels>
    </destination>
</flex-message-service-mods>
