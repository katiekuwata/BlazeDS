<?xml version="1.0" ?>
<!--
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2008 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
-->

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:qa="http://www.adobe.com/2006/flexqa" creationComplete="run()">
		
	<mx:HTTPService id="hs" destination="external-proxy" method="get" useProxy="true" result="onServiceResult(event)" 
		fault="onServiceFault(event)" />
	
	<mx:Script>	
	<![CDATA[

		/*************************************************************************************
		 *     This example tests the usage of IPv6 address in the external-proxy setting of
		 *     the proxy service.  Config an external proxy server such as using apache 
		 *     mod_proxy and add the following to the proxy-config.xml.
		 *	   <destination id="external-proxy">
		 *		<properties>
		 *			<!-- apache proxy server doesn't support IPv6 and use IPv4 for the targetURL -->
		 *                      <!-- it points back to the test server -->
		 *			<url>http://<targetURL:8400/qa-manual/ipv6/proxyservice/httpService/basic.xml</url>
		 *			<external-proxy>
		 *				<!-- apache proxy IPv6 IP -->
		 *				<server>2001:1170:100a:342d:30c:39ff:fe25:61aa</server>
		 *			<port>3129</port>
		 *			</external-proxy>
		 *		</properties>
		 *	   </destination>
		 *     Request the page using a global IPv6 address or [::1] 
		**************************************************************************************/

		import qa.mxunit.*;
		import mx.rpc.events.*;

		public var result:Object;
		public var type:String = "";
		
		public function onServiceResult(event:ResultEvent):void 
		{
			type = event.type;
			result = event.result;
			log("Result=" + event.type + " " +  result);
		}

		public function onServiceFault(event:FaultEvent):void 
		{
			type = event.type;
			log("http service fault: " + event.type + " " + event.fault.faultString + " " + event.fault.faultDetail);
		}

		
		public function run():void 
		{
			hs.send();			
			MXUnitManager.delay = 6000;
			MXUnitManager.addTests(this,["Test_attributes","Test_result"],10000);
		}

		public function Test_attributes():void 
		{
			Assert.assertTrue("useProxy should be TRUE", hs.useProxy == true);
			Assert.assertTrue("method should be GET", hs.method == "get");
			Assert.assertTrue("hs.lastResult should be event.result", hs.lastResult == result);
		}

		public function Test_result():void 
		{			
			Assert.assertTrue("should result in a Result", type == "result");
		}

		public function log(s:String):void
		{
			ta.text += s + "\n";
		}

	]]>
	</mx:Script>
	<mx:TextArea id="ta" width="50%" height="50%" />

</mx:Application>