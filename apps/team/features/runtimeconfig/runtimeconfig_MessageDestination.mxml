<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
    creationComplete="creationCompleteHandler();">

    <!-- This sample calls a remote object to dynamically create a message 
         destination and tries to use that destination.
    -->
    <mx:Panel id="mainPanel" height="100%" width="100%">
        <mx:HBox>
            <mx:Button label="Create Destination" click="createDestination();" 
                enabled="{!destinationCreated}"/>
            <mx:Button label="Remove Destination" click="removeDestination();" 
                enabled="{destinationCreated}"/> 
        </mx:HBox>
        <mx:HBox enabled="{destinationCreated}">
            <mx:Label text="Producer"/>
            <mx:Button label="Send Foo" click="sendMessage()"/>
            <mx:Button label="Disconnect" click="producer.disconnect();" enabled="{producer.connected}"/>
            <mx:CheckBox label="Connected?" selected="{producer.connected}"/>
        </mx:HBox>
        <mx:HBox enabled="{destinationCreated}">
            <mx:Label text="Consumer"/>
            <mx:Button label="Subcribe" click="consumer.subscribe();" enabled="{!consumer.subscribed}"/>
            <mx:Button label="Unsubscribe" click="consumer.unsubscribe();" enabled="{consumer.subscribed}"/>
            <mx:Button label="Disconnect" click="consumer.disconnect();" enabled="{consumer.connected}"/>
            <mx:CheckBox label="Connected?" selected="{consumer.connected}"/>
            <mx:CheckBox label="Subscribed?" selected="{consumer.subscribed}"/>
        </mx:HBox>
        <mx:Button label="Clear" click='ta.text = ""'/>
        <mx:TextArea id="ta" width="100%" height="100%"/>
    </mx:Panel>

    <mx:RemoteObject id="runtimeConfigurator" 
        destination="RuntimeConfigurator"/>

    <mx:Producer id="producer" 
        destination="messaging_AMF_Poll_Runtime"
        fault="messageFaultHandler(event)"/>

    <mx:Consumer id="consumer" 
        destination="messaging_AMF_Poll_Runtime"
        fault="messageFaultHandler(event)" 
        message="messageHandler(event)"/>

    <mx:Script>
        <![CDATA[
            import mx.messaging.ChannelSet;
            import mx.messaging.channels.AMFChannel;
            import mx.messaging.events.MessageFaultEvent;
            import mx.messaging.events.MessageEvent;
            import mx.messaging.messages.AsyncMessage;
            import mx.messaging.Producer;
            import mx.messaging.Consumer;

            import mx.rpc.AsyncToken;
            import mx.rpc.AsyncResponder;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;

            import mx.logging.Log;
            import mx.logging.targets.TraceTarget;

            [Bindable]
            public var destinationCreated:Boolean = false;

            private function creationCompleteHandler():void
            {
                var target:TraceTarget = new TraceTarget();
                target.includeLevel = true;
                target.filters = ["mx.messaging.*", "mx.rpc.*"];
                Log.addTarget(target);  

                // Need to set the ChannelSet for dynamically created destinations. 
                // This channel should match with whatever channel the destination uses.
                var channelSet:ChannelSet = new ChannelSet();
                var channel:AMFChannel = new AMFChannel("my-amf-poll", "http://localhost:8400/team/messagebroker/myamfpoll");
                channelSet.addChannel(channel);
                producer.channelSet = channelSet;
                consumer.channelSet = channelSet;
            }

            private function createDestination():void
            {
                var token:AsyncToken = runtimeConfigurator.createMessageDestination();
                token.addResponder(new AsyncResponder(
                    function (event:ResultEvent, token:Object=null):void
                    {
                        ta.text += "RuntimeConfigurator result: "+ event.result + "\n";
                        destinationCreated = true;
                    },
                    function (event:FaultEvent, token:Object=null):void
                    {
                        ta.text += "RuntimeConfigurator fault: " + event.fault + "\n";
                        destinationCreated = false;
                    })); 
            }

            private function removeDestination():void
            {
                var token:AsyncToken = runtimeConfigurator.removeMessageDestination();
                token.addResponder(new AsyncResponder(
                    function (event:ResultEvent, token:Object=null):void
                    {
                        ta.text += "RuntimeConfigurator result: "+ event.result + "\n";
                        destinationCreated = false;
                    },
                    function (event:FaultEvent, token:Object=null):void
                    {
                        ta.text += "RuntimeConfigurator fault: " + event.fault + "\n";
                        destinationCreated = false;
                    }));
            }

            private function sendMessage():void
            {
                var msg:AsyncMessage = new AsyncMessage();
                msg.body = "Foo";
                producer.send(msg);
            }

            private function messageHandler(event:MessageEvent):void
            {
                ta.text += "Consumer received message: "+ event.message.body + "\n";
            }

            private function messageFaultHandler(event:MessageFaultEvent):void
            {
                ta.text += "Received fault: " + event.faultString + "\n";
            }
        ]]>
    </mx:Script>
</mx:Application>